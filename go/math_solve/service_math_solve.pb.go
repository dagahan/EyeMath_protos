// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: service_math_solve.proto

package mathsolve

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetaDataSolveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaDataSolveRequest) Reset() {
	*x = MetaDataSolveRequest{}
	mi := &file_service_math_solve_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaDataSolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataSolveRequest) ProtoMessage() {}

func (x *MetaDataSolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_math_solve_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataSolveRequest.ProtoReflect.Descriptor instead.
func (*MetaDataSolveRequest) Descriptor() ([]byte, []int) {
	return file_service_math_solve_proto_rawDescGZIP(), []int{0}
}

type MetaDataSolveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaDataSolveResponse) Reset() {
	*x = MetaDataSolveResponse{}
	mi := &file_service_math_solve_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaDataSolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaDataSolveResponse) ProtoMessage() {}

func (x *MetaDataSolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_math_solve_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaDataSolveResponse.ProtoReflect.Descriptor instead.
func (*MetaDataSolveResponse) Descriptor() ([]byte, []int) {
	return file_service_math_solve_proto_rawDescGZIP(), []int{1}
}

func (x *MetaDataSolveResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetaDataSolveResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SolveRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	LatexExpression        string                 `protobuf:"bytes,1,opt,name=latex_expression,json=latexExpression,proto3" json:"latex_expression,omitempty"`
	ShowSolvingSteps       bool                   `protobuf:"varint,2,opt,name=show_solving_steps,json=showSolvingSteps,proto3" json:"show_solving_steps,omitempty"`
	RenderLatexExpressions bool                   `protobuf:"varint,3,opt,name=render_latex_expressions,json=renderLatexExpressions,proto3" json:"render_latex_expressions,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SolveRequest) Reset() {
	*x = SolveRequest{}
	mi := &file_service_math_solve_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveRequest) ProtoMessage() {}

func (x *SolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_math_solve_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveRequest.ProtoReflect.Descriptor instead.
func (*SolveRequest) Descriptor() ([]byte, []int) {
	return file_service_math_solve_proto_rawDescGZIP(), []int{2}
}

func (x *SolveRequest) GetLatexExpression() string {
	if x != nil {
		return x.LatexExpression
	}
	return ""
}

func (x *SolveRequest) GetShowSolvingSteps() bool {
	if x != nil {
		return x.ShowSolvingSteps
	}
	return false
}

func (x *SolveRequest) GetRenderLatexExpressions() bool {
	if x != nil {
		return x.RenderLatexExpressions
	}
	return false
}

type SolveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []string               `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	SolvingSteps  []string               `protobuf:"bytes,2,rep,name=solving_steps,json=solvingSteps,proto3" json:"solving_steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SolveResponse) Reset() {
	*x = SolveResponse{}
	mi := &file_service_math_solve_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveResponse) ProtoMessage() {}

func (x *SolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_math_solve_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveResponse.ProtoReflect.Descriptor instead.
func (*SolveResponse) Descriptor() ([]byte, []int) {
	return file_service_math_solve_proto_rawDescGZIP(), []int{3}
}

func (x *SolveResponse) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SolveResponse) GetSolvingSteps() []string {
	if x != nil {
		return x.SolvingSteps
	}
	return nil
}

var File_service_math_solve_proto protoreflect.FileDescriptor

const file_service_math_solve_proto_rawDesc = "" +
	"\n" +
	"\x18service_math_solve.proto\x12\tmathsolve\"\x19\n" +
	"\x17meta_data_solve_request\"H\n" +
	"\x18meta_data_solve_response\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\xa2\x01\n" +
	"\rsolve_request\x12)\n" +
	"\x10latex_expression\x18\x01 \x01(\tR\x0flatexExpression\x12,\n" +
	"\x12show_solving_steps\x18\x02 \x01(\bR\x10showSolvingSteps\x128\n" +
	"\x18render_latex_expressions\x18\x03 \x01(\bR\x16renderLatexExpressions\"O\n" +
	"\x0esolve_response\x12\x18\n" +
	"\aresults\x18\x01 \x03(\tR\aresults\x12#\n" +
	"\rsolving_steps\x18\x02 \x03(\tR\fsolvingSteps2\xa9\x01\n" +
	"\rGRPCMathSolve\x12Z\n" +
	"\x0fmeta_data_solve\x12\".mathsolve.meta_data_solve_request\x1a#.mathsolve.meta_data_solve_response\x12<\n" +
	"\x05solve\x12\x18.mathsolve.solve_request\x1a\x19.mathsolve.solve_responseB:Z8github.com/dagahan/EyeMath_protos/go/mathsolve;mathsolveb\x06proto3"

var (
	file_service_math_solve_proto_rawDescOnce sync.Once
	file_service_math_solve_proto_rawDescData []byte
)

func file_service_math_solve_proto_rawDescGZIP() []byte {
	file_service_math_solve_proto_rawDescOnce.Do(func() {
		file_service_math_solve_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_math_solve_proto_rawDesc), len(file_service_math_solve_proto_rawDesc)))
	})
	return file_service_math_solve_proto_rawDescData
}

var file_service_math_solve_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_service_math_solve_proto_goTypes = []any{
	(*MetaDataSolveRequest)(nil),  // 0: mathsolve.meta_data_solve_request
	(*MetaDataSolveResponse)(nil), // 1: mathsolve.meta_data_solve_response
	(*SolveRequest)(nil),          // 2: mathsolve.solve_request
	(*SolveResponse)(nil),         // 3: mathsolve.solve_response
}
var file_service_math_solve_proto_depIdxs = []int32{
	0, // 0: mathsolve.GRPCMathSolve.meta_data_solve:input_type -> mathsolve.meta_data_solve_request
	2, // 1: mathsolve.GRPCMathSolve.solve:input_type -> mathsolve.solve_request
	1, // 2: mathsolve.GRPCMathSolve.meta_data_solve:output_type -> mathsolve.meta_data_solve_response
	3, // 3: mathsolve.GRPCMathSolve.solve:output_type -> mathsolve.solve_response
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_math_solve_proto_init() }
func file_service_math_solve_proto_init() {
	if File_service_math_solve_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_math_solve_proto_rawDesc), len(file_service_math_solve_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_math_solve_proto_goTypes,
		DependencyIndexes: file_service_math_solve_proto_depIdxs,
		MessageInfos:      file_service_math_solve_proto_msgTypes,
	}.Build()
	File_service_math_solve_proto = out.File
	file_service_math_solve_proto_goTypes = nil
	file_service_math_solve_proto_depIdxs = nil
}
